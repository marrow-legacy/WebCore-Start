[exe]
command = serve
reload = true

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8080

[app:main]
use = egg:WebCore
debug = True

web.root = ${package.name}.controllers.root:RootController
web.templating.engine = ${app.template_engine}

{% if app.sessions %}
web.sessions = True
web.sessions.data_dir = %(here)s/data/sessions/data
web.sessions.lock_dir = %(here)s/data/sessions/lock
web.sessions.secret = ${pwgen(32)}
{% end %}

{% if app.cache %}
web.cache = True
web.cache.data_dir = %(here)s/data/cache/data
web.cache.lock_dir = %(here)s/data/cache/lock
{% end %}

web.widgets = ${str(app.widgets)}

{% if app.authentication %}
web.auth = True
web.auth.lookup = ${package.name}.model.${app.authenticataion.db}:Account.get
web.auth.authenticate = ${package.name}.model.${app.authenticataion.db}:Account.authenticate
web.auth.handler = /login
{% end %}

{% if app.development.db %}
db.connections = ${', '.join([db.name for db in app.development.db])}
{%   for db in app.development.db %}

db.${db.name}.engine = ${db.engine}
db.${db.name}.model = ${package.name}.model.${db.file}
{%     for option, value in db.options.iteritems() %}
db.${db.name}.${option} = ${value}
{%     end %}
{%   end %}
{% end %}

[loggers]
keys = root, ${package.name}, webcore

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_${package.name}]
level = DEBUG
handlers = console
qualname = ${package.name}
propagate = 0

[logger_webcore]
level = INFO
handlers = console
qualname = web
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
